/* eslint-disable */
export default {
    entityMap: {
        '0': {
            type: 'LINK',
            mutability: 'MUTABLE',
            data: { url: 'https://github.com/facebook/draft-js' },
        },
        '1': {
            type: 'LINK',
            mutability: 'MUTABLE',
            data: { url: 'https://support.google.com/docs/answer/179738' },
        },
        '2': { type: 'HORIZONTAL_RULE', mutability: 'IMMUTABLE', data: {} },
        '3': {
            type: 'LINK',
            mutability: 'MUTABLE',
            data: {
                url:
                    'https://github.com/springload/draftail/tree/master/docs#keyboard-shortcuts',
            },
        },
        '4': {
            type: 'LINK',
            mutability: 'MUTABLE',
            data: { url: 'https://www.springload.co.nz/' },
        },
        '5': {
            type: 'IMAGE',
            mutability: 'IMMUTABLE',
            data: {
                altText: 'Test image alt text',
                alignment: 'left',
                src: 'assets/example-image.png',
            },
        },
        '6': {
            type: 'LINK',
            mutability: 'MUTABLE',
            data: { url: 'http://embed.ly/' },
        },
        '7': {
            type: 'EMBED',
            mutability: 'IMMUTABLE',
            data: {
                url: 'http://www.youtube.com/watch?v=feUYwoLhE_4',
                title:
                    'React.js Conf 2016 - Isaac Salier-Hellendag - Rich Text Editing with React',
                providerName: 'YouTube',
                authorName: 'Facebook Developers',
                thumbnail: 'https://i.ytimg.com/vi/feUYwoLhE_4/hqdefault.jpg',
            },
        },
        '8': { type: 'HORIZONTAL_RULE', mutability: 'IMMUTABLE', data: {} },
        '9': {
            type: 'LINK',
            mutability: 'MUTABLE',
            data: { url: 'https://springload.github.io/draftail/example.html' },
        },
        '10': {
            type: 'LINK',
            mutability: 'MUTABLE',
            data: { url: 'https://github.com/springload/draftail' },
        },
    },
    blocks: [
        {
            key: 'b0ei9',
            text: 'Draftail is a rich text editor built with Draft.js',
            type: 'header-two',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 42, length: 8, key: 0 }],
            data: {},
        },
        {
            key: '74al',
            text: 'Try it out by editing this text!',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '7htbd',
            text: 'Features üìùüç∏',
            type: 'header-three',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '32lnv',
            text:
                'Draftail aims for a mouse-free, keyboard-centric experience. Most formatting can be done by using common keyboard shortcuts, inspired by Google Docs.',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 137, length: 11, key: 1 }],
            data: {},
        },
        {
            key: 'a15ts',
            text: ' ',
            type: 'atomic',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 0, length: 1, key: 2 }],
            data: {},
        },
        {
            key: 'ejqsd',
            text: 'Here are important features worth highlighting:',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '2mhgt',
            text: 'Support for keyboard shortcuts.',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 12, length: 19, key: 3 }],
            data: {},
        },
        {
            key: 'f4gp0',
            text:
                'Autolists ‚Äì start a line with -, *, 1. to create a list item.',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [
                { offset: 30, length: 1, style: 'KEYBOARD' },
                { offset: 33, length: 1, style: 'KEYBOARD' },
                { offset: 36, length: 2, style: 'KEYBOARD' },
            ],
            entityRanges: [],
            data: {},
        },
        {
            key: 'cum79',
            text: 'Undo / redo ‚Äì until the end of times.',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '3cnm0',
            text: 'Common text types: headings, paragraphs, quotes, lists.',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '5qfeb',
            text: 'Common text styles: Bold, Italic, etc',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [
                { offset: 20, length: 4, style: 'BOLD' },
                { offset: 26, length: 6, style: 'ITALIC' },
            ],
            entityRanges: [],
            data: {},
        },
        {
            key: '8br3k',
            text: 'Built-in Link and Document controls.',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 9, length: 4, key: 4 }],
            data: {},
        },
        {
            key: '2j2hl',
            text: 'Built-in Image and Embed blocks.',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '3tbpg',
            text: ' ',
            type: 'atomic',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 0, length: 1, key: 5 }],
            data: {},
        },
        {
            key: 'eb00n',
            text: 'The Embeds in this example are powered by Embedly:',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 42, length: 7, key: 6 }],
            data: {},
        },
        {
            key: 'f7s8c',
            text: ' ',
            type: 'atomic',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 0, length: 1, key: 7 }],
            data: {},
        },
        {
            key: '5t6c9',
            text: 'Try out some keyboard shortcuts:',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'df4ie',
            text:
                'Apply H3 heading style: ctrl + alt + 3 or ‚åò + option + 3 (macOS)',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [
                { offset: 6, length: 2, style: 'BOLD' },
                { offset: 24, length: 4, style: 'KEYBOARD' },
                { offset: 31, length: 3, style: 'KEYBOARD' },
                { offset: 37, length: 1, style: 'KEYBOARD' },
                { offset: 42, length: 1, style: 'KEYBOARD' },
                { offset: 46, length: 6, style: 'KEYBOARD' },
                { offset: 55, length: 1, style: 'KEYBOARD' },
            ],
            entityRanges: [],
            data: {},
        },
        {
            key: '101cm',
            text: 'Bulleted list: ctrl + shift + 8 or ‚åò + shift + 8',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [
                { offset: 15, length: 4, style: 'KEYBOARD' },
                { offset: 22, length: 5, style: 'KEYBOARD' },
                { offset: 30, length: 1, style: 'KEYBOARD' },
                { offset: 35, length: 1, style: 'KEYBOARD' },
                { offset: 39, length: 5, style: 'KEYBOARD' },
                { offset: 47, length: 1, style: 'KEYBOARD' },
            ],
            entityRanges: [],
            data: {},
        },
        {
            key: '8urvn',
            text: 'Increase list indentation: tab',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [{ offset: 27, length: 3, style: 'KEYBOARD' }],
            entityRanges: [],
            data: {},
        },
        {
            key: '2km89',
            text: 'Insert or edit link: ctrl + K or ‚åò + K',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [
                { offset: 21, length: 4, style: 'KEYBOARD' },
                { offset: 28, length: 1, style: 'KEYBOARD' },
                { offset: 33, length: 1, style: 'KEYBOARD' },
                { offset: 37, length: 1, style: 'KEYBOARD' },
            ],
            entityRanges: [],
            data: {},
        },
        {
            key: '12df8',
            text: 'Open link: alt + enter or option + enter',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [
                { offset: 11, length: 3, style: 'KEYBOARD' },
                { offset: 17, length: 5, style: 'KEYBOARD' },
                { offset: 26, length: 6, style: 'KEYBOARD' },
                { offset: 35, length: 5, style: 'KEYBOARD' },
            ],
            entityRanges: [],
            data: {},
        },
        {
            key: '1sggt',
            text: 'For developers üöÄ',
            type: 'header-two',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '2nb2a',
            text:
                'Draftail is meant to be used in scenarios where not all formatting should be available, and where custom formatting can be necessary. Available formats, built-in and custom, can be specificed declaratively for each editor instance.',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '26mu7',
            text: 'Built-in',
            type: 'header-three',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '9mda0',
            text:
                'Block types: H1, H2, H3, H4, H5, H6, Blockquote, Code, UL, OL, P',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '6h6as',
            text:
                'Inline styles: Bold, Italic, Underline, Code, Strikethrough, Mark, Keyboard, Superscript, Subscript',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '3haur',
            text: 'Entities: Images, Embeds, Links, Documents',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'dnji2',
            text: 'And HR, BR',
            type: 'unordered-list-item',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'fgg07',
            text: ' ',
            type: 'atomic',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 0, length: 1, key: 8 }],
            data: {},
        },
        {
            key: 'd5k22',
            text: 'Custom block types',
            type: 'header-three',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '6h166',
            text:
                'New block types can be created by giving them a unique type, a label or an icon (or both, for the toolbar), and element and className attributes:',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [
                { offset: 55, length: 4, style: 'BOLD' },
                { offset: 63, length: 5, style: 'BOLD' },
                { offset: 75, length: 4, style: 'BOLD' },
                { offset: 112, length: 7, style: 'BOLD' },
                { offset: 124, length: 9, style: 'BOLD' },
            ],
            entityRanges: [],
            data: {},
        },
        {
            key: '7p4gi',
            text: 'blockTypes={[',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '58kfm',
            text:
                "    { label: 'Tiny', type: 'tiny-text', element: 'div', className: 'u-tinytext' },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '88v3f',
            text: ']}',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '7ouai',
            text: 'Custom inline styles',
            type: 'header-three',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'biqf8',
            text:
                "inlineStyles={[\n    { label: 'Redacted', type: 'REDACTED', style: { backgroundColor: 'currentcolor' } },\n]}",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '2iad',
            text: 'Custom entity types',
            type: 'header-three',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '28uqr',
            text: 'entityTypes={[',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'f7obp',
            text:
                "    { label: 'Image', type: ENTITY_TYPE.IMAGE, icon: 'icon-image', source: ImageSource, imageFormats: [] },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '2omo4',
            text:
                "    { label: 'Embed', type: ENTITY_TYPE.EMBED, icon: 'icon-media', source: EmbedSource },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '8fu4a',
            text:
                "    { label: 'Link', type: ENTITY_TYPE.LINK, icon: 'icon-link', source: LinkSource, decorator: Link },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'e4est',
            text:
                "    { label: 'Document', type: ENTITY_TYPE.DOCUMENT, icon: 'icon-doc-full', source: DocumentSource, decorator: Document },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'cko41',
            text:
                "    // { label: 'Location', type: 'LOCATION', icon: 'icon-location', source: GenericModelSource, decorator: Model },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '7tper',
            text: ']}',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'dgi85',
            text: 'Usage',
            type: 'header-two',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '5gh8i',
            text: 'First, grab the package from npm:',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '1csjm',
            text: 'npm install --save draftail',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '80bi',
            text: "# Draftail's peerDependencies:",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'b8c96',
            text:
                'npm install --save draft-js@^0.10.0 react@^15.0.0 react-dom@^15.0.0',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'aci2r',
            text:
                '# Note: Draft.js builds upon ES6 language features. If targeting browsers that do not support them,',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'beeuv',
            text:
                '# see https://facebook.github.io/draft-js/docs/advanced-topics-issues-and-pitfalls.html#polyfills.',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '32v54',
            text:
                'Then, import the editor and use it in your code. Here is a basic example:',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 59, length: 13, key: 9 }],
            data: {},
        },
        {
            key: 'eh53t',
            text: "import React from 'react';",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '6be42',
            text: "import ReactDOM from 'react-dom';",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '1vilo',
            text: '',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '33n1l',
            text:
                "import DraftailEditor, { BLOCK_TYPE, INLINE_STYLE } from 'draftail';",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '8f7uv',
            text: '',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '4eooc',
            text:
                "const initialContentState = JSON.parse(sessionStorage.getItem('basic:contentState')) || null;",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '4orun',
            text: '',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '2nenj',
            text: 'const onSave = (contentState) => {',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '6himf',
            text:
                "    sessionStorage.setItem('basic:contentState', JSON.stringify(contentState));",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'elu8v',
            text: '};',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '3k6b1',
            text: '',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '4hrb1',
            text: 'const editor = (',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '31kc6',
            text: '    <DraftailEditor',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '3lkk3',
            text: '        rawContentState={initialContentState}',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'e2636',
            text: '        onSave={onSave}',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '816t8',
            text: '        blockTypes={[',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '12u5',
            text: "            { label: 'H3', type: BLOCK_TYPE.HEADER_THREE },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '5o39s',
            text:
                "            { label: 'UL', type: BLOCK_TYPE.UNORDERED_LIST_ITEM, icon: 'icon-list-ul' },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'c85ld',
            text: '        ]}',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'icg7',
            text: '        inlineStyles={[',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'ck071',
            text:
                "            { label: 'Bold', type: INLINE_STYLE.BOLD, icon: 'icon-bold' },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '5veu',
            text:
                "            { label: 'Italic', type: INLINE_STYLE.ITALIC, icon: 'icon-italic' },",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'bm634',
            text: '        ]}',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'a14a9',
            text: '    />',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'unjt',
            text: ');',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '29ql6',
            text: '',
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: 'bf6lh',
            text:
                "ReactDOM.render(editor, document.querySelector('[data-mount-basic]'));",
            type: 'code-block',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [],
            data: {},
        },
        {
            key: '99k19',
            text: 'For further documentation, look at the project on GitHub.',
            type: 'unstyled',
            depth: 0,
            inlineStyleRanges: [],
            entityRanges: [{ offset: 39, length: 17, key: 10 }],
            data: {},
        },
    ],
};
